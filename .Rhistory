# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
return(clean_data = data)
}
###---------------------------------------------
data_fin <- clean.all(data)
cleaner <- function(data){
# unlist every column
#   for(i in 1:(NROW(N)-1)){
#      data[,i] = unlist(data[,i])
#   }
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
return(clean_data = data)
}
data_fin <- clean.all(data)
View(data_fin)
class(data_fin$roadname)
N         = c(NA, "address", "buysum", "date", "sqm_price", "n_rooms", "type", "m2","build_year")              # behold NA som første element!
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
return(clean_data = data)
}
data_fin <- clean.all(data)
View(data_fin)
View(subaddr)
View(addr)
substr(data$area[1],5)
substr(data$area[1],1,5)
?substr
substr(data$area,1,5)
substr(data$area,1,10)
View(data)
substr(data_fin$area,1,10)
substr(data_fin$area,1,10) %>%
str_extract_all("[:alpha:]")
str_extract_all(data_fin$area,"TV")
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
data$door = str_extract_all(data$area, "TV")
return(clean_data = data)
}
data_fin <- clean.all(data)
View(data_fin)
str_extract_all(data_fin$area,c("TV","TH"))
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
data$door = str_extract_all(data$area, c("TV","TH"))
data$door[data$door = "character(0)"] <- NA
return(clean_data = data)
}
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
data$door = str_extract_all(data$area, c("TV","TH"))
data$door[data$door == "character(0)"] <- NA
return(clean_data = data)
}
data_fin <- clean.all(data)
str_extract_all(data$area, c("TV","TH"))
str_extract_all(data_fin$area, c("TV","TH"))
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
str_extract_all(data$area, c("TV","TH"))
return(clean_data = data)
}
data_fin <- clean.all(data)
View(data_fin)
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
data$door = str_extract_all(data$area, c("TV","TH"))
return(clean_data = data)
}
data_fin <- clean.all(data)
View(data_fin)
grep(data_fin$area, "TV")
grep("TV", data_fin$area)
?gsub
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
data$door = gsub(c("TV","TH"), data$area, data$area)
return(clean_data = data)
}
data_fin <- clean.all(data)
?str_replace_all
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
data$door = str_replace_all(data$area, c("TV","TH"), c("TV","TH"))
return(clean_data = data)
}
data_fin <- clean.all(data)
View(data_fin)
cleaner <- function(data){
# unlist every column
for(i in 1:(NROW(N)-1)){
data[,i] = unlist(data[,i])
}
# replace - with NA's
data[data == "-"] <- NA
# remove 1000-seperators
data$buysum = gsub("\\.","", data$buysum) %>% as.numeric
data$sqm_price = gsub("\\.","", data$sqm_price) %>% as.numeric
# convert to numeric
data[c("n_rooms","m2","build_year")] <- as.numeric(as.matrix(data[c("n_rooms","m2","build_year")]))
# Opdel date i faktisk dato og handelstype
data$tradetype = substr(data$date, 11,20)
data$date = substr(data$date, 1,10)
#convert date to actual date
data$date = as.Date(data$date, "%d-%m-%Y")
# clean all character columns of whitespace in begining and end of string
data[,sapply(data, class) == 'character'] <- lapply(data[,sapply(data, class) == 'character'], trimws)
#separer addressen (ufærdigt!)
data = data %>% separate(address, c("roadname", "area"),",")
data$floor = with(data, ifelse(grepl(". ", data$area, fixed = TRUE) == TRUE, substr(data$area,2,2), NA))
data$floor[data$floor == "S"] = 0
data$floor = as.numeric(data$floor)
#gen vejnavn & husnr vars
data$vejnavn = gsub(" [^ ]*$", "", data$roadname)
data$husnr = gsub(".* ", "", data$roadname)
return(clean_data = data)
}
clean.all <- function(data){
data <- cleaner(data)
data <- geodata.offline(data)
drop(roadname, area)
return(data)
}
data_fin <- clean.all(data)
View(data_fin)
clean.all <- function(data){
data <- cleaner(data)
data <- geodata.offline(data)
return(data)
}
data_fin <- clean.all(data)
ggplot(data = data_fin) +
geom_density(aes(x = buysum), fill = "blue", size = 1, alpha = 0.6) +
facet_wrap(~ nborhood)
ggplot(data = data_fin) +
geom_density(aes(x = buysum), fill = "blue", size = 1, alpha = 0.6) +
facet_wrap(~ postnrnavn)
map_cph = get_map(location = "copenhagen", zoom = 12, color = "bw")
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_fin, aes( x = lon, y = lat, color = log(buysum)), alpha = 0.3) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
#    scale_color_gradient(high = "orange", low = "blue") +
#  scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
scale_color_viridis(discrete = F)+
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_fin), extent = "normal", maprange=FALSE) +
geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_fin, aes( x = lon, y = lat, color = log(buysum)), alpha = 0.3) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
#    scale_color_gradient(high = "orange", low = "blue") +
#  scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
scale_color_viridis(discrete = F)+
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
map_cph = get_map(location = "copenhagen", zoom = 12, color = "bw")
bydel = area.matcher(data_fin)[[2]]
data_geo = geodata.offline(data_clean)                         # brug evt geodata.offline istedet!
data_fin = area.matcher(data_geo)[[1]]    #area.matcher finder bykvarter for hver observation
bydel = area.matcher(data_geo)[[2]]
bydel = area.matcher(data_fin)[[2]]
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
library(devtools)
install_github("elben10/rdst")
install.packages("tibble")
install_github("elben10/rdst")
library(tibble)
as_tibble()
library(tibble)
install.packages("tibble")
library(tibble)
devtools::install_github("tidyverse/tibble")
install.packages("tibble")
library(tibble)
install_github("tidyverse/tibble")
library(devtools)
install_github("tidyverse/tibble")
install_github("tidyverse/tibble", dependencies=TRUE)
install.packages("httr",
"jsonlite",
"purrr",
"rlang",
"magrittr",
"glue",
"tibble",
"stringr",
"readr")
install.packages("httr", "jsonlite", "purrr", "rlang", "magrittr", "glue", "tibble", "stringr", "readr")
install.packages("httr")
install.packages("httr")
install.packages("jsonlite")
install.packages(""purrr"")
install.packages("purrr")
install.packages(""rlang"")
install.packages("rlang")
install.packages("magrittr")
install.packages("glue")
install.packages("tibble")
install.packages("Rcpp")
install.packages("tibble")
library("RcppEigen", lib.loc="~/R/win-library/3.3")
detach("package:RcppEigen", unload=TRUE)
install.packages("Rcpp")
install.packages("Rcpp", dependencies = TRUE)
install.packages("tibble", dependencies = TRUE)
install.packages("Rcpp")
install.packages("jsonlite")
install_github("elben10/rdst", dependencies = F)
library(devtools)
install_github("elben10/rdst", dependencies = F)
library("rdst")
dst_download("FOLK1a")
dst_tables() %>% View()
library(magrittr)
dst_tables() %>% View()
dst_subjects()
dst_tables(subjectsID = "04")
dst_tables(subjectsID = "04", lang = "da")
dst_variables("AKU121")
dst_variables("AKU121", lang = "da")
dst_variables("AKU121", lang = "da") %>% is_tibble()
dst_variables("AKU121", lang = "da") %>% tibble::is_tibble()
dst_download("AKU121". c("KØN", "ALDER"))
dst_download("AKU121", c("KØN", "ALDER"))
dst_download("AKU121", c("KØN", "ALDER", "BESKSTATUS"))
dst_download("AKU121", c("KØN", "ALDER", "BESKSTATUS")) %>% View()
install_github("elben10/rdst", dependencies = F)
devtools::install_github("elben10/rdst", dependencies = F)
library("rdst")
rdst
dst
dst_subjects()
dst_variables("FOLK1A")
dst_download("FOLK1A", vars = list(KØN = "1"))
dst_download("FOLK1A", vars = list(KØN = "2"))
dst_download("FOLK1A", vars = list(KØN = "2", CIVILSTAND = "*"))
dst_download
httr::modify_url("HTTPS//:google.dk",query = list(lang = "Hej"))
httr::modify_url("HTTPS//:google.dk",query = list(lang = "Hej", je = "hej"))
setwd("C:\Users\qsd161\Documents\GitHub\HowIsTheEconomyDoing")
setwd("C:/Users/qsd161/Documents/GitHub/HowIsTheEconomyDoing")
library(readr)
library(tidyverse)
NAN1 = read.csv("NAN1.csv", sep = ";")
#%>%
#  mutate(INDHOLD = as.numeric(INDHOLD))
fixedPrice = subset(NAN1, PRISENHED == "2010-prices- chained values- (bill. dkk.)") %>%
subset(TRANSAKT == "B.1*g Gross domestic product")
fixedPrice
fixedPrice$INDHOLD = as.numeric(as.character(fixedPrice$INDHOLD))
ggplot(data = fixedPrice) +
geom_line(aes(x = as.numeric(TID), y = as.numeric(INDHOLD))) +
geom_smooth()
ggplot(data = fixedPrice) +
geom_line(aes(x = as.numeric(TID), y = as.numeric(INDHOLD))) +
geom_smooth(inherit.aes = T)
ggplot(data = fixedPrice) +
geom_line(aes(x = as.numeric(TID), y = as.numeric(INDHOLD))) +
geom_smooth(aes(x = as.numeric(TID), y = as.numeric(INDHOLD)))
